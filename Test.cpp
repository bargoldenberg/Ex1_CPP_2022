/**
 * An example of how to write unit tests.
 * Use this as a basis to build a more complete Test.cpp file.
 * 
 * IMPORTANT: Please write more tests - the tests here are only for example and are not complete.
 *
 * AUTHORS: <BAR GOLDENBERG 209894286>
 * 
 * Date: 2021-02
 * 
 */

#include "doctest.h"
#include "mat.hpp"
#include <iostream>
#include <algorithm>
using namespace ariel;

using namespace std;

/**
 * Returns the input string without the whitespace characters: space, newline and tab.
 * Requires std=c++2a.
 */
string nospaces(string input) {
	std::erase(input, ' ');
	std::erase(input, '\t');
	std::erase(input, '\n');
	std::erase(input, '\r');
	return input;
}

/**
 * @brief For some reason the code wont work when i write it nice, it only works when everything is in one line.
 * 
 */

TEST_CASE("Good input") {
	/* good test 1*/	
    CHECK(nospaces(mat(9, 7, '@', '-')) == nospaces("@@@@@@@@@\n@-------@\n@-@@@@@-@\n@-@---@-@\n@-@@@@@-@\n@-------@\n@@@@@@@@@"));
	/* good test 2*/	
	CHECK(nospaces(mat(11,1,'$','^')) == nospaces("$$$$$$$$$$$"));
	/* good test 3*/	
    CHECK(nospaces(mat(11,3,'$','^')) == nospaces("$$$$$$$$$$$\n$^^^^^^^^^$\n$$$$$$$$$$$"));
	/* good test 4*/	
    CHECK(nospaces(mat(11,7,'&','*'))==nospaces("&&&&&&&&&&&\n&*********&\n&*&&&&&&&*&\n&*&*****&*&\n&*&&&&&&&*&\n&*********&\n&&&&&&&&&&&"));
	/* good test 5*/	
	CHECK(nospaces(mat(11,3,'$','^')) == nospaces("$$$$$$$$$$$\n$^^^^^^^^^$\n$$$$$$$$$$$"));
	/* good test 6*/	
	CHECK(nospaces(mat(13,5,'$','^')) == nospaces("$$$$$$$$$$$$$\n$^^^^^^^^^^^$\n$^$$$$$$$$$^$\n$^^^^^^^^^^^$\n$$$$$$$$$$$$$"));
	/* good test 7*/	
	CHECK(nospaces(mat(5,1,'*','^')) == nospaces("*****\n"));
	/* good test 8*/	
	CHECK(nospaces(mat(17,17,'*','@')) == nospaces("*****************\n*@@@@@@@@@@@@@@@*\n*@*************@*\n*@*@@@@@@@@@@@*@*\n*@*@*********@*@*\n*@*@*@@@@@@@*@*@*\n*@*@*@*****@*@*@*\n *@*@*@*@@@*@*@*@*\n*@*@*@*@*@*@*@*@*\n *@*@*@*@@@*@*@*@*\n*@*@*@*****@*@*@*\n*@*@*@@@@@@@*@*@*\n*@*@*********@*@*\n*@*@@@@@@@@@@@*@*\n*@*************@*\n*@@@@@@@@@@@@@@@*\n*****************\n"));
	/* good test 9*/	
	CHECK(nospaces(mat(7,1,'(',')')) == nospaces("((((((("));
	/* good test 10*/	
	CHECK(nospaces(mat(7,3,'(',')')) == nospaces("(((((((\n()))))(\n((((((("));
	/* good test 11*/	
	CHECK(nospaces(mat(11,3,'$','$')) == nospaces("$$$$$$$$$$$\n$$$$$$$$$$$\n$$$$$$$$$$$"));
	/* good test 12*/	
	CHECK(nospaces(mat(1,3,'$','^')) == nospaces("$\n$\n$\n"));
	/* good test 13*/	
	CHECK(nospaces(mat(3,3,'@','#')) == nospaces("@@@\n@#@\n@@@"));
	/* good test 14*/	
	CHECK(nospaces(mat(3,5,'$','^')) == nospaces("$$$\n$^$\n$^$\n$^$\n$$$"));
	/* good test 15*/	
	CHECK(nospaces(mat(5,3,'-','_')) == nospaces("-----\n-___-\n-----"));
    /* good test 16*/	
	CHECK(nospaces(mat(11,3,'4','3')) == nospaces("44444444444\n43333333334\n44444444444"));
	/* good test 17*/	
	 CHECK(nospaces(mat(1,1,'$','^')) == nospaces("$"));
	/* good test 18*/	
	CHECK(nospaces(mat(3,3,'b','a')) == nospaces("bbb\nbab\nbbb"));
	/*LARGE INPUT*/
	CHECK(nospaces(mat(51, 73, '@', '-'))==nospaces("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@-------------------------------------------------@\n@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@\n@-@---------------------------------------------@-@\n@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@\n@-@-@-----------------------------------------@-@-@\n@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@\n@-@-@-@-------------------------------------@-@-@-@\n@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@\n@-@-@-@-@---------------------------------@-@-@-@-@\n@-@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@-@\n@-@-@-@-@-@-----------------------------@-@-@-@-@-@\n@-@-@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@-@-@\n@-@-@-@-@-@-@-------------------------@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@---------------------@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@@@@@@@@@@@@@@@@@@@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-----------------@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@@@@@@@@@@@@@@@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-------------@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@@@@@@@@@@@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@---------@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@@@@@@@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-----@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@@@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-@@@-@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@-----@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@-@@@@@@@-@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@---------@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-@@@@@@@@@@@-@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@-------------@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-@@@@@@@@@@@@@@@-@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@-----------------@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@-@@@@@@@@@@@@@@@@@@@-@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@---------------------@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@-@-@-@\n@-@-@-@-@-@-@-------------------------@-@-@-@-@-@-@\n@-@-@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@-@-@\n@-@-@-@-@-@-----------------------------@-@-@-@-@-@\n@-@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@-@\n@-@-@-@-@---------------------------------@-@-@-@-@\n@-@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@-@\n@-@-@-@-------------------------------------@-@-@-@\n@-@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@-@\n@-@-@-----------------------------------------@-@-@\n@-@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@-@\n@-@---------------------------------------------@-@\n@-@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@\n@-------------------------------------------------@\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@"));
}

TEST_CASE("Bad input") {
	/*ONE OR TWO OF THE ARGUMENTS ARE EVEN*/
	/*------------------------------------*/
	/*test 1*/
    CHECK_THROWS(mat(10, 5, '$', '%'));
    /*test 2*/
    CHECK_THROWS(mat(0, 5, '$', '*'));
	/*test 3*/
    CHECK_THROWS(mat(12, 3, '$', '$'));
	/*test 4*/
	CHECK_THROWS(mat(15, 4, '@', '@'));
	/*ONE OR TWO OF THE ARGUMENTS ARE ODD*/
	/*------------------------------------*/
	/*test 5*/
    CHECK_THROWS(mat(-10, 5, '(', ')'));
	/*test 6*/
    CHECK_THROWS(mat(-3, 5, '_', '-'));
	/*test 7*/
	CHECK_THROWS(mat(-3, -5, '!', '@'));
	/*test 8*/
	CHECK_THROWS(mat(-7, -5, '!', '@'));
}



